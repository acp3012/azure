{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "coviddataingestion-adf"
		},
		"ls_ablob_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_ablob_storage'"
		},
		"ls_adl_sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adl_sink'"
		},
		"ls_adl_sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covid19adlstorageact.dfs.core.windows.net/"
		},
		"ls_ecdc_data_http_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().baseurl}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_cases_dearth_process')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DaillyCasesAndDearthDataTransformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_cases_dearth_process",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceCasesDearth": {},
									"lookupCountry": {},
									"SinkProcessData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-31T14:54:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_cases_dearth_process')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ecdc_data_ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup config url",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_url_list_config",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get data from each site",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup config url",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup config url').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "relativeUrl",
										"value": {
											"value": "@item().relativeUrl",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "sinkFileName",
										"value": {
											"value": "@item().sinkFileName",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable3",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_source_http_data_csv",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@variables('relativeUrl')",
													"type": "Expression"
												},
												"baseUrl": {
													"value": "@variables('baseUrl')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sink_data_csv",
											"type": "DatasetReference",
											"parameters": {
												"sinkFileName": {
													"value": "@variables('sinkFileName')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "baseUrl",
										"value": {
											"value": "@item().baseUrl",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"relativeUrl": {
						"type": "String"
					},
					"sinkFileName": {
						"type": "String"
					},
					"baseUrl": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-29T03:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_url_list_config')]",
				"[concat(variables('factoryId'), '/datasets/ds_source_http_data_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_data_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cases_dearth_processed_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_sink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/cases_dearth",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cases_dearth_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_sink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"folderPath": "ecdc/cases_deaths",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup_country')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_sink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_lookup.csv",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_data_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset to store in data in Azure data lake gen 2 storage.",
				"linkedServiceName": {
					"referenceName": "ls_adl_sink",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sinkFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().sinkFileName",
							"type": "Expression"
						},
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_http_data_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ecdc_data_http",
					"type": "LinkedServiceReference",
					"parameters": {
						"baseurl": {
							"value": "@dataset().baseUrl",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"relativeUrl": {
						"type": "string"
					},
					"baseUrl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeUrl",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ecdc_data_http')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_url_list_config')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "covid19data.json",
						"container": "config"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ablob_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_ablob_storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adl_sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adl_sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adl_sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ecdc_data_http')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"baseurl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_ecdc_data_http_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_cases_dearth_process')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cases_dearth_source",
								"type": "DatasetReference"
							},
							"name": "sourceCasesDearth"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_country",
								"type": "DatasetReference"
							},
							"name": "lookupCountry"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_cases_dearth_processed_csv",
								"type": "DatasetReference"
							},
							"name": "SinkProcessData"
						}
					],
					"transformations": [
						{
							"name": "filterOnlyEUdata"
						},
						{
							"name": "SelectRequiredColumns"
						},
						{
							"name": "PivotCount"
						},
						{
							"name": "lookupCountryCode"
						},
						{
							"name": "selectColumnsForSink"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as integer,",
						"          indicator as string,",
						"          daily_count as integer,",
						"          date as date,",
						"          rate_14_day as double,",
						"          source as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false) ~> sourceCasesDearth",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false) ~> lookupCountry",
						"sourceCasesDearth filter(continent=='Europe' && not(isNull(country_code))) ~> filterOnlyEUdata",
						"filterOnlyEUdata select(mapColumn(",
						"          country,",
						"          country_code,",
						"          population,",
						"          indicator,",
						"          daily_count,",
						"          report_date = date,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectRequiredColumns",
						"SelectRequiredColumns pivot(groupBy(country,",
						"          country_code,",
						"          population,",
						"          report_date,",
						"          source),",
						"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
						"     count = sum(daily_count),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> PivotCount",
						"PivotCount, lookupCountry lookup(PivotCount@country == lookupCountry@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupCountryCode",
						"lookupCountryCode select(mapColumn(",
						"          country = PivotCount@country,",
						"          country_code_3 = country_code,",
						"          population = PivotCount@population,",
						"          report_date,",
						"          source,",
						"          {confirmed cases_count},",
						"          deaths_count,",
						"          country_code_2_digit",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectColumnsForSink",
						"selectColumnsForSink sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          country,",
						"          country_code_2_digit,",
						"          country_code_3,",
						"          report_date,",
						"          confirmed_cases_count = {confirmed cases_count},",
						"          deaths_count,",
						"          population,",
						"          source",
						"     )) ~> SinkProcessData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_cases_dearth_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookup_country')]",
				"[concat(variables('factoryId'), '/datasets/ds_cases_dearth_processed_csv')]"
			]
		}
	]
}